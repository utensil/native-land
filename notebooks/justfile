set fallback

env_sep := if os() == "windows" { ";" } else { ":" }
venv := join(justfile_directory(), ".venv") 
export PATH := join(venv, "bin") + env_sep + env_var("PATH")

defaut: list

list:
    just --list

test:
    pytest -vv --durations=50 --nbval --nbval-kernel-name rust .

kernels:
    jupyter kernelspec list

lab:
    jupyter lab

prep: prep-venv
    uv pip install ipykernel nbval jupyterlab
    rustup component add rust-src
    cargo install --locked --force evcxr_jupyter
    evcxr_jupyter --install

prep-venv:
    #!/usr/bin/env bash
    which uv || just prep-uv
    if [ ! -d .venv ]; then
        uv venv --seed --python 3.11
    fi

old-prep:
    #!/usr/bin/env bash
    set -e
    # assuming pyenv is installed
    echo "locally, run this first: pyenv shell 3.11"
    python3 -m pip install ipykernel nbval jupyterlab
    rustup component add rust-src
    cargo install --locked evcxr_jupyter
    evcxr_jupyter --install

install-pyenv:
    #!/usr/bin/env bash
    curl https://pyenv.run | bash
