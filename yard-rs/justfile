example_xp := justfile_directory() / "example-xp"

default:
    just --list

prep-dx:
    cargo install dioxus-cli
    @echo "create a new project: dx new"

dx-new:
    dx new

dx-css:
    cd {{invocation_directory()}}; bunx tailwindcss -i ./input.css -o ./assets/tailwind.css --watch
dx-dev:
    cd {{invocation_directory()}}; dx serve --hot-reload --platform desktop
dx-test: dx-prep-test
    cd {{invocation_directory()}}; cargo test
dx-prep-test:
    cd {{invocation_directory()}}; cargo add dioxus-ssr pretty_assertions futures

cl-run:
    clear
    cd {{invocation_directory()}}; cargo run --example gelu --features wgpu

test:
    cd {{invocation_directory()}}; cargo test

prep-tr:
    brew install tracy

tr-bevy:
    @echo "open another terminal and run: cd {{invocation_directory()}}; cargo run --release --features bevy/trace_tracy"
    cd {{invocation_directory()}}; tracy-capture -f -o my_capture.tracy
    @eacho "run: tracy my_capture.tracy"

tr-bevy-live:
    tracy -a 127.0.0.1 -p 8086 &
    cd {{invocation_directory()}}; cargo run --release --features bevy/trace_tracy

tbl: tr-bevy-live

# not working
ct-bevy:
    cd {{invocation_directory()}}; cargo run --release --features bevy/trace_chrome

# https://doc.rust-lang.org/nightly/cargo/reference/timings.html
bt *PARAMS:
    cd {{invocation_directory()}}; cargo build --timings {{PARAMS}}

@prep-ex URL DIR BRANCH:
    #!/usr/bin/env bash
    mkdir -p {{example_xp}}
    cd {{example_xp}}
    if [[ ! -d {{example_xp / DIR}} ]]; then
        git clone {{URL}} {{example_xp / DIR}}
    fi
    cd {{example_xp / DIR}}
    git checkout {{BRANCH}}

# breakout scene_viewer
# storage_buffer gpu_readback
# low_power monitor_info screenshot transparent_window
# 3d_viewport_to_world anisotropy camera_sub_view depth_of_field fog_volumes lightmaps
# motion_blur pbr post_processing query_gltf_primitives reflection_probes render_to_texture
# split_screen spotlight ssr tonemapping transmission two_passes volumetric_fog 
# Not enough memory left: meshlet pbr_multi_layer_material_textures
# custom_post_processing extended_material gpu_readback shader_prepass storage_buffer fps_overlay hot_asset_reloading asset_processing
# headless_renderer
# not working: loading_screen

try-bevy +PARAMS: (prep-ex "https://github.com/bevyengine/bevy" "bevy" "main")
    cd {{example_xp / "bevy"}} && cargo run --features="jpeg pbr_anisotropy_texture bevy_dev_tools file_watcher" --release --example {{PARAMS}}

gltf:
    just try-bevy scene_viewer {{ example_xp / "black_hole" / "scene.gltf" }}

try-compute +PARAMS: (prep-ex "https://github.com/AnthonyTornetta/bevy_easy_compute" "compute" "main")
    cd {{example_xp / "compute"}} && cargo run --release --example {{PARAMS}}

# shaders/compute-shader runners/wgpu multibuilder 
# not working: 
# - runners/ash : path error
# use release to bypass https://github.com/Rust-GPU/rust-gpu/issues/29
try-rg EX: (prep-ex "https://github.com/Rust-GPU/rust-gpu" "rust-gpu" "main")
    cd {{example_xp / "rust-gpu" / "examples" / EX }} && cargo run --release

rm-ex NAME:
    rm -rf {{example_xp / NAME}}

mp:
    just try-compute multi_pass

