example_xp := justfile_directory() / "example-xp"

default:
    just --list

prep-dx:
    cargo install dioxus-cli
    @echo "create a new project: dx new"

dx-new:
    dx new

dx-css:
    cd {{invocation_directory()}}; bunx tailwindcss -i ./input.css -o ./assets/tailwind.css --watch
dx-dev:
    cd {{invocation_directory()}}; dx serve --hot-reload --platform desktop
dx-test: dx-prep-test
    cd {{invocation_directory()}}; cargo test
dx-prep-test:
    cd {{invocation_directory()}}; cargo add dioxus-ssr pretty_assertions futures

cl-run:
    clear
    cd {{invocation_directory()}}; cargo run --example gelu --features wgpu

cl-test:
    cd {{invocation_directory()}}; cargo test

@prep-ex URL DIR BRANCH:
    #!/usr/bin/env bash
    mkdir -p {{example_xp}}
    cd {{example_xp}}
    if [[ ! -d {{example_xp / DIR}} ]]; then
        git clone {{URL}} {{example_xp / DIR}}
    fi
    cd {{example_xp / DIR}}
    git checkout {{BRANCH}}

# breakout scene_viewer
# hello_world storage_buffer gpu_readback
try-bevy +PARAMS: (prep-ex "https://github.com/bevyengine/bevy" "bevy" "main")
    cd {{example_xp / "bevy"}} && cargo run --release --example {{PARAMS}}

gltf:
    just try-bevy scene_viewer {{ example_xp / "black_hole" / "scene.gltf" }}

try-compute +PARAMS: (prep-ex "https://github.com/AnthonyTornetta/bevy_easy_compute" "compute" "main")
    cd {{example_xp / "compute"}} && cargo run --release --example {{PARAMS}}

# shaders/compute-shader runners/wgpu multibuilder 
# not working:
# - runners/ash : path error
# use release to bypass https://github.com/Rust-GPU/rust-gpu/issues/29
try-rg EX: (prep-ex "https://github.com/Rust-GPU/rust-gpu" "rust-gpu" "main")
    cd {{example_xp / "rust-gpu" / "examples" / EX }} && cargo run --release

rm-ex NAME:
    rm -rf {{example_xp / NAME}}

mp:
    just try-compute multi_pass

