[workspace]

# Try
# require version 2 to avoid "feature" additiveness for dev-dependencies
# https://doc.rust-lang.org/cargo/reference/resolver.html#feature-resolver-version-2
resolver = "2"

# run a member with `cargo run -p member`
members = [
    "yard-rs/*"
]

exclude = [
    "archived/*",
    "yard-rs/example-xp",
    "yard-rs/runpod-xp",
]

[workspace.package]
edition = "2021"
license = "MIT"
readme = "README.md"
version = "0.0.1"

# Following https://bevyengine.org/learn/quick-start/getting-started/setup/#compile-with-performance-optimizations

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
# 3:49.63 total, 3.9GiB total 
opt-level = 1
# 4:34.71 total, 4.5GiB total
# opt-level = 2
# 5:06.65 total, 4.5GiB total
# opt-level = 3

# Optional: use cranelift, better on linux
# https://bevyengine.org/learn/quick-start/getting-started/setup/#cranelift

# Enable more optimization in the release profile at the cost of compile time.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"

# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.wasm-release]
# Default to release profile values.
inherits = "release"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"

# Optional: use https://github.com/WebAssembly/binaryen
# wasm-opt -Os --output output.wasm input.wasm